The ``add_integer`` module
==========================

This is an example text file.

==========================

First import ``add_integer`` from the ``add_integer`` module

>>> add_integer = __import__('0-add_integer').add_integer

Normal addition
>>> add_integer(1, 2)
3
>>> add_integer(100, -2)
98

One parameter
>>> add_integer(2)
100

Float addition
>>> add_integer(100.3, -2)
98

String addition
>>> add_integer(4, "School")
Traceback (most recent call last):
...
TypeError: b must be an integer
>>> add_integer("School", 3)
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> add_integer(None)
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'

List type
>>> add_integer([1, 2, 3], 4)
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> add_integer(1, [1, 3])
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> add_integer(2.9, 0.2)
2

>>> add_integer(-2.9, -0.2)
-2

>>> add_integer(2.3, -3)
-1

>>> add_integer(2)
100

>>> add_integer(float('inf'))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer

>>> add_integer(float('nan'))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer
