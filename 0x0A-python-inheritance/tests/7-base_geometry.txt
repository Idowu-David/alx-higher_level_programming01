This is a test file for the module integer_validator

Firstly import the module
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()


>>> print(bg) # doctest: +ELLIPSIS
<7-base_geometry.BaseGeometry object at ...>
In fact, any arguments supplied to an instantiation of ``BaseGeometry`` results
in a TypeError.
::
>>> bg = BaseGeometry(None)
Traceback (most recent call last):
TypeError: object() takes no parameters
Methods
=======
``BaseGeometry`` features two methods - ``area(self)`` and
``integer_validator(self, name, value)``. ``area(...)`` is not yet
implemented.
::
>>> bg = BaseGeometry()
>>> print(bg.area) # doctest: +ELLIPSIS, +NORMALIZE_WHITESPACE
<bound method BaseGeometry.area of <7-base_geometry.BaseGeometry
object at...>>
::
>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented
The second method, ``integer_validator(...)``, validates the integer value
of a paramter. The first parameter, ``name``, is the name of the argument to
check. The second argument, ``value``, is the argument to check.
::
>>> print(bg.integer_validator) # doctest: +ELLIPSIS, +NORMALIZE_WHITESPACE
<bound method BaseGeometry.integer_validator of <7-base_geometry.BaseGeometry
object at...>>
If ``value`` is a valid integer, the function does nothing.

>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)
>>> bg.integer_validator("my_int", "string")
Traceback (most recent call last):
...
TypeError: my_int must be an integer

>>> bg.integer_validator("width", None)
Traceback (most recent call last):
...
TypeError: width must be an integer

>>> bg.integer_validator("my_int", [1, 2])
Traceback (most recent call last):
...
TypeError: my_int must be an integer

>>> bg.integer_validator("width", (1, 2))
Traceback (most recent call last):
...
TypeError: width must be an integer

>>> bg.integer_validator("my_int", 3.4)
Traceback (most recent call last):
...
TypeError: my_int must be an integer

>>> bg.integer_validator("my_int", -2)
Traceback (most recent call last):
...
ValueError: my_int must be greater than 0
